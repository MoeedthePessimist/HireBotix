[
  {
    "problem": "Implement a function to reverse a string.",
    "difficulty": "Easy"
  },
  {
    "problem": "Write a function to find the factorial of a number.",
    "difficulty": "Easy"
  },
  {
    "problem": "Create a function to check if a number is prime.",
    "difficulty": "Easy"
  },
  {
    "problem": "Develop a function to compute the Fibonacci sequence up to n terms.",
    "difficulty": "Easy"
  },
  {
    "problem": "Implement a function to find the maximum element in an array.",
    "difficulty": "Easy"
  },
  {
    "problem": "Write a function to check if a string is a palindrome.",
    "difficulty": "Easy"
  },
  {
    "problem": "Create a function to merge two sorted arrays.",
    "difficulty": "Easy"
  },
  {
    "problem": "Develop a function to count the number of vowels in a string.",
    "difficulty": "Easy"
  },
  {
    "problem": "Implement a function to remove duplicates from an array.",
    "difficulty": "Easy"
  },
  {
    "problem": "Write a function to find the GCD of two numbers.",
    "difficulty": "Easy"
  },
  {
    "problem": "Create a function to find the longest common prefix in an array of strings.",
    "difficulty": "Intermediate"
  },
  {
    "problem": "Implement a function to perform binary search on a sorted array.",
    "difficulty": "Intermediate"
  },
  {
    "problem": "Write a function to sort an array using the quicksort algorithm.",
    "difficulty": "Intermediate"
  },
  {
    "problem": "Develop a function to find the first non-repeating character in a string.",
    "difficulty": "Intermediate"
  },
  {
    "problem": "Implement a function to check if two strings are anagrams.",
    "difficulty": "Intermediate"
  },
  {
    "problem": "Write a function to find the kth largest element in an array.",
    "difficulty": "Intermediate"
  },
  {
    "problem": "Create a function to find the intersection of two arrays.",
    "difficulty": "Intermediate"
  },
  {
    "problem": "Develop a function to rotate an array by k positions.",
    "difficulty": "Intermediate"
  },
  {
    "problem": "Implement a function to validate a Sudoku board.",
    "difficulty": "Intermediate"
  },
  {
    "problem": "Write a function to find the maximum subarray sum using the Kadane's algorithm.",
    "difficulty": "Intermediate"
  },
  {
    "problem": "Create a function to implement a LRU (Least Recently Used) cache.",
    "difficulty": "Hard"
  },
  {
    "problem": "Develop a function to solve the N-Queens problem.",
    "difficulty": "Hard"
  },
  {
    "problem": "Write a function to find the shortest path in a graph using Dijkstra's algorithm.",
    "difficulty": "Hard"
  },
  {
    "problem": "Implement a function to serialize and deserialize a binary tree.",
    "difficulty": "Hard"
  },
  {
    "problem": "Create a function to solve the word search problem on a grid.",
    "difficulty": "Hard"
  },
  {
    "problem": "Develop a function to find all permutations of a string.",
    "difficulty": "Hard"
  },
  {
    "problem": "Write a function to find the longest increasing subsequence in an array.",
    "difficulty": "Hard"
  },
  {
    "problem": "Implement a function to perform topological sorting on a graph.",
    "difficulty": "Hard"
  },
  {
    "problem": "Create a function to solve the traveling salesman problem using dynamic programming.",
    "difficulty": "Hard"
  },
  {
    "problem": "Develop a function to find the maximum flow in a flow network using the Ford-Fulkerson algorithm.",
    "difficulty": "Hard"
  }
]
